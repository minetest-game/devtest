# textdomain: mods
<=
>=
Page: @1/@2=
No items found.=
Reset search=
Trash:=
Search=
X=
Bag of Everything=
Grants access to all items=
Chest of Everything=
Good Food (+1)=
Punch: Eat=
Good Food (+5)=
Bad Food (-1)=
Bad Food (-5)=
Replacing Food (+1)=
Punch: Eat and replace with 'Good Food (+1)'=
Texture Overlay Test Item, Meta Color=
Image must be a square with rainbow cross (inventory and wield)=
Item meta color must only change square color=
Punch: Set random color=
Place: Clear color=
Texture Overlay Test Item, Global Color=
Image must be an orange square with rainbow cross (inventory and wield)=
Image Override Meta Test Item=
"normal" Drawtype Test Node=
Opaque texture=
"glasslike" Drawtype Test Node=
Transparent node with hidden backfaces=
"glasslike_framed" Drawtype Test Node=
Frame connects to neighbors=
"glasslike_framed" Drawtype without Detail Test Node=
Frame connects to neighbors, but the 'detail' tile is not used=
"glasslike_framed_optional" Drawtype Test Node=
Frame connects if 'connected_glass' setting is true=
"allfaces" Drawtype Test Node=
Transparent node with visible internal backfaces=
Rendering depends on 'leaves_style' setting:=
* 'fancy': transparent with visible internal backfaces=
* 'simple': transparent with hidden backfaces=
* 'opaque': opaque=
"allfaces_optional" Drawtype Test Node=
Waving "allfaces_optional" Drawtype Test Node=
"firelike" Drawtype Test Node=
Changes shape based on neighbors=
"fencelike" Drawtype Test Node=
Floor "torchlike" Drawtype Test Node=
Always on floor=
Wallmounted "torchlike" Drawtype Test Node=
Floor "signlike" Drawtype Test Node=
Wallmounted "signlike" Drawtype Test Node=
"plantlike" Drawtype Test Node=
Waving "plantlike" Drawtype Test Node=
Wallmounted "plantlike" Drawtype Test Node=
Degrotate "plantlike" Drawtype Test Node=
param2 @= horizontal rotation (0..239)=
Degrotate "mesh" Drawtype Test Node=
Colordegrotate "mesh" Drawtype Test Node=
param2 @= color + horizontal rotation (0..23, 32..55, ...)=
Leveled "plantlike" Drawtype Test Node=
param2 @= height (0..255)=
Meshoptions "plantlike" Drawtype Test Node=
param2 @= plant shape=
"rooted_plantlike" Drawtype Test Node=
Wallmounted "rooted_plantlike" Drawtype Test Node=
Waving "rooted_plantlike" Drawtype Test Node=
Leveled "rooted_plantlike" Drawtype Test Node=
Meshoptions "rooted_plantlike" Drawtype Test Node=
Degrotate "rooted_plantlike" Drawtype Test Node=
"liquid" Drawtype Test Node, Range @1=
Drawtype only; all liquid physics are disabled=
"flowingliquid" Drawtype Test Node, Range @1=
param2 @= flowing liquid level=
Waving "liquid" Drawtype Test Node=
Waving "flowingliquid" Drawtype Test Node=
"airlike" Drawtype Test Node=
Invisible node=
Inventory/wield image @= no_texture_airlike.png=
"glasslike_framed" Drawtype with Liquid Test Node=
param2 @= liquid level (0..63)=
Connects to rails=
Connects to lines=
Connects to streets=
Connects to 'groupless' rails=
"raillike" Drawtype Test Node: @1 @2=
Double-sized @1=
Half-sized @1=
* 'fancy'/'simple': transparent=
Transparent node=
Waving if waving leaves are enabled by client=
Waves if waving leaves are enabled by client=
Waves if waving plants are enabled by client=
Waves if waving liquids are enabled by client=
param2 @= wallmounted rotation (0..5)=
Connects to neighbors=
Light Source (@1)=
Sunlight Filter=
Lets light through, but weakens sunlight=
Sunlight Propagator=
Lets all light through=
Mesh Test Node=
Facedir Mesh Test Node=
Color Facedir Mesh Test Node=
4dir Mesh Test Node=
Color 4dir Mesh Test Node=
Wallmounted Mesh Test Node=
Color Wallmounted Mesh Test Node=
Double-sized Mesh Test Node=
Half-sized Mesh Test Node=
Plantlike-waving Mesh Test Node=
Leaflike-waving Mesh Test Node=
Liquidlike-waving Mesh Test Node=
param2 @= facedir rotation (0..23)=
param2 @= color + facedir rotation (0..23, 32..55, ...)=
param2 @= 4dir rotation (0..3)=
param2 @= color + 4dir rotation (0..255)=
param2 @= color + wallmounted rotation (0..5, 8..13, ...)=
Fixed Nodebox Test Node=
Nodebox is always the same=
+50% high Nodebox Test Node=
+95% high Nodebox Test Node=
Leveled Nodebox Test Node=
param2 @= height (0..127)=
Connected Nodebox Test Node (4 Side Wall)=
Connects to 4 neighbors sideways=
Connected Nodebox Test Node (6 Side Cable)=
Connects to 6 neighbors=
Facedir Connected Nodebox Test Node (4 Side Wall)=
param2 @= facedir rotation of textures (not of the nodebox!)=
4Dir Connected Nodebox Test Node=
param2 @= 4dir rotation of textures (not of the nodebox!)=
Facedir Node that connected Nodeboxes connect to=
Neighbors connect only to left (blue 4) and top (yellow 1) face=
(Currently broken for param2 >@= 4, see FIXME in nodedef.cpp)=
param2 @= facedir=
Texture Overlay Test Node=
Uncolorized=
Texture Overlay Test Node, Colorized=
param2 changes color=
Texture Overlay Test Node, Colorized Overlay=
param2 changes color of overlay=
Texture Overlay Test Node, Colorized Base=
param2 changes color of base texture=
Texture Overlay Test Node, Global Color=
Global color @= @1=
Texture Overlay Test Node, Global Color + Colorized=
Texture Overlay Test Node, Global Color + Colorized Overlay=
Texture Overlay Test Node, Global Color + Colorized Base=
Facedir Test Node=
4dir Test Node=
Facedir Nodebox Test Node=
4dir Nodebox Test Node=
Wallmounted Test Node=
Wallmounted Nodebox Test Node=
Color Test Node=
param2 @= color (0..255)=
Color Facedir Test Node=
Color Facedir Nodebox Test Node=
Color 4dir Test Node=
Color 4dir Nodebox Test Node=
Color Wallmounted Test Node=
Color Wallmounted Nodebox Test Node=
Performance Test Node=
Marble with 'clip' transparency=
Marble with 'blend' transparency=
Marble with overlay with 'clip' transparency=
Palette for demonstration=
Marble with overlay with 'blend' transparency=
Falling Node=
Falls down if no node below=
Falling Facedir Node=
param2 @= facedir rotation=
Falling+Floating Node=
Falls down if no node below, floats on liquids (liquidtype ~@= "none")=
Floor-Attached Node=
Drops as item if no solid node below=
Wallmounted Attached Node=
Attaches to wall; drops as item if neighbor node is gone=
Floor-Attached Wallmounted Node=
Ceiling-Attached Node=
Facedir Attached Node=
4dir Attached Node=
Non-jumping Node=
You can't jump on it=
Non-jumping Plant Node=
You can't jump while your feet are in it=
Climbable Node=
You can climb up and down=
Downwards-climbable Node=
You can climb only downwards=
Upwards-climbable Node=
Horizontal-only Climbable Node=
Non-jumping Liquid Source Node=
Swimmable liquid, but you can't swim upwards=
Non-jumping Flowing Liquid Node=
No-swim Liquid Source Node=
Liquid node, but swimming is disabled=
No-swim Flowing Liquid Node=
No-descending Liquid Source Node=
No-descending Flowing Liquid Node=
+@1=
Fall Damage Node (+@1%)=
Fall Damage Node (-@1%)=
Bouncy Node (@1%), jumpy=
Sneaking/jumping affects bounce=
Bouncy Node (@1%), non-jumpy=
Sneaking/jumping does not affect bounce=
Slippery Node (@1)=
Move-resistant Node (@1)=
Reduces movement speed=
Liquidlike Movement Node=
Swimmable (no move resistance)=
Move-resistant Node (@1), liquidlike=
Reduces movement speed; swimmable=
Climbable Move-resistant Node (4)=
You can climb up and down; reduced movement speed=
"buildable_to" Node=
Placing a node on it will replace it=
Damage Node (@1 damage per second)=
Healing Node (@1 HP per second)=
Drowning Node (@1 damage)=
You'll drown inside it=
"post_effect_color_shaded @= false" Node=
"post_effect_color_shaded @= true" Node=
Six Textures Test Node=
Has 1 texture per face=
Animated Test Node=
Tiles animate from A to D in 4s cycle=
Texture Alpha Test Node (@1)=
Semi-transparent=
Alpha Test Node (@1)=
Generated Mandelbrot PNG Test Node=
Generated Checker PNG Test Node=
Generated In-Band Mandelbrot PNG Test Node=
Generated In-Band Source Blit Mandelbrot PNG Test Node=
Generated In-Band Dest Blit Mandelbrot PNG Test Node=
TGA Type 1 (color-mapped RGB) 24bpp bottom-top Test Node=
TGA Type 1 (color-mapped RGB) 24bpp top-bottom Test Node=
TGA Type 2 (uncompressed RGB) 16bpp bottom-top Test Node=
TGA Type 2 (uncompressed RGB) 16bpp top-bottom Test Node=
TGA Type 2 (uncompressed RGB) 32bpp bottom-top Test Node=
TGA Type 2 (uncompressed RGB) 32bpp top-bottom Test Node=
TGA Type 3 (uncompressed grayscale) 16bpp bottom-top Test Node=
TGA Type 3 (uncompressed grayscale) 16bpp top-bottom Test Node=
TGA Type 10 (RLE-compressed RGB) 32bpp bottom-top Test Node=
TGA Type 10 (RLE-compressed RGB) 32bpp top-bottom Test Node=
Destination too far away! Set a destination (via placing) within a distance of @1 and try again!=
Path from @1 to @2:=
No path!=
Time: @1 ms=
Path length: @1=
Destination set to @1=
Algorithm: @1=
Pathfinder Tester=
Finds path between 2 points=
Place on node: Select destination=
Punch: Find path from here=
Sneak+Punch: Change algorithm=
Param2 Tool=
Modify param2 value of nodes=
Punch: +1=
Sneak+Punch: +8=
Place: -1=
Sneak+Place: -8=
Node Setter=
Replace pointed node with something else=
Punch: Select pointed node=
Place on node: Replace node with selected node=
Place in air: Manually select a node=
Now placing: @1 (param2@=@2)=
Node name (itemstring):=
param2:=
Submit=
Punch a node first!=
Cannot set unknown node: @1=
Remover=
Punch: Remove pointed node or object=
Can't remove players!=
Falling Node Tool=
Punch: Make pointed node fall=
Place: Move pointed node 2 units upwards, then make it fall=
Falling node could not be spawned!=
Entity Rotator=
Rotate pointed entity=
Punch: Yaw=
Sneak+Punch: Pitch=
Aux1+Punch: Roll=
distance@=@1/10=
Object Mover=
Move pointed object towards or away from you=
Punch: Move by distance=
Sneak+Punch: Move by negative distance=
Place: Increase distance=
Sneak+Place: Decrease distance=
Entity Visual Scaler=
Scale visual size of entities=
Punch: Increase size=
Sneak+Punch: Decrease scale=
Branding Iron=
Give an object a temporary name.=
Punch object: Brand the object=
Punch air: Brand yourself=
The name is valid until the object unloads.=
Devices that accept the returned name also accept "player:<playername>" for players.=
Entity Spawner=
Spawns entities=
Punch: Select entity to spawn=
Place: Spawn selected entity=
Select an entity first (with punch key)!=
Object properties of player “@1”=
Object properties of @1=
Value=
Object Property Editor=
Edit properties of objects=
Punch object: Edit object=
Punch air: Edit yourself=
rotation@=@1=
position@=@1=
Object Attacher=
Attach object to another=
Punch objects to first select parent object, then the child object to attach=
Punch air to select yourself=
Place: Incease attachment Y offset=
Sneak+Place: Decease attachment Y offset=
Aux1+Place: Incease attachment rotation=
Aux1+Sneak+Place: Decrease attachment rotation=
Object detached!=
Object is not attached!=
<unknown>=
Parent object selected: @1=
Child object selected: @1=
Can't attach an object to itself!=
Object attached! position@=@1, rotation@=@2=
Attachment failed!=
Children Getter=
Shows list of objects attached to object=
Punch object to show its 'children'=
Punch air to show your own 'children'=
No children attached to @1.=
Children of @1:=
Current keys:=
Key=
Value (use empty value to delete key)=
Set value=
pos @= @1=
item @= @1=
Node Meta Editor=
Place: Edit node metadata=
Place an item next to the Item Meta Editor in your inventory first!=
Item Meta Editor=
Punch/Place: Edit item metadata of item in the next inventory slot=
Light Tool=
Show light values of node=
Punch: Light of node above touched node=
Place: Light of touched node itself=
